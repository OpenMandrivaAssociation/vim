To: vim_dev@googlegroups.com
Subject: Patch 7.4.1060
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.4.1060
Problem:    Instructions for writing tests are outdated.
Solution:   Mention Make_all.mak.  Add steps for new style tests.
Files:      src/testdir/README.txt


*** ../vim-7.4.1059/src/testdir/README.txt	2016-01-03 22:16:16.004130318 +0100
--- src/testdir/README.txt	2016-01-07 21:58:18.071723582 +0100
***************
*** 1,20 ****
  This directory contains tests for various Vim features.
  
! If it makes sense, try to add a new test to an already existing file.  You may
! want to separate it from other tests in that file using :" (that's an Ex
! command comment).
  
  The numbered tests are older, we have switched to named tests.
- And the newest way of testing is to use assert functions, see test_assert.vim
- for an example.
  
! To add a new test:
  1) Create test_<subject>.in and test_<subject>.ok files.
! 2) Add them to all Makefiles (Make*) in alphabetical order (search for an
!    existing test_file.out to see where to add the new one).
! 3) Use make test_<subject>.out to run a single test file in src/testdir/.
  4) Also add an entry in src/Makefile.
  
! Keep in mind that the files are used as if everything was typed.
! A line break is like pressing Enter.  If that happens on the last line you'll
! hear a beep.
--- 1,41 ----
  This directory contains tests for various Vim features.
  
! If it makes sense, add a new test method to an already existing file.  You may
! want to separate it from other tests with comment lines.
  
  The numbered tests are older, we have switched to named tests.
  
! And then you can chose between a new style test, which is a Vim script, or an
! old style test, which uses Normal mode commands.  Use a new style test if you
! can.
! 
! 
! TO ADD A NEW STYLE TEST:
! 
! 1) Create a test_<subject>.vim file.
! 2) Add test_<subject>.vim to NEW_TESTS in Make_all.mak in alphabetical order.
! 3) Use make test_<subject>.res to run a single test in src/testdir/.
!    Use make test_<subject>  to run a single test in src/.
! 4) Also add an entry in src/Makefile.
! 
! What you can use (see test_assert.vim for an example):
! - Call assert_equal(), assert_true() and assert_false().
! - Use try/catch to check for exceptions.
! - Use alloc_fail() to have memory allocation fail. This makes it possible to
!   to check memory allocation failures are handled gracefully.  You need to
!   change the source code to add an ID to the allocation.  Update LAST_ID_USED
!   above alloc_id() to the highest ID used.
! 
! 
! TO ADD AN OLD STYLE TEST:
! 
  1) Create test_<subject>.in and test_<subject>.ok files.
! 2) Add test_<subject>.out to SCRIPTS_ALL in Make_all.mak in alphabetical order.
! 3) Use make test_<subject>.out to run a single test in src/testdir/.
!    Use make test_<subject>  to run a single test in src/.
  4) Also add an entry in src/Makefile.
  
! Keep in mind that the files are used as if everything was typed:
! - To add comments use:   :"  (that's an Ex command comment)
! - A line break is like pressing Enter.  If that happens on the last line
!   you'll hear a beep!
*** ../vim-7.4.1059/src/version.c	2016-01-07 21:28:19.799295853 +0100
--- src/version.c	2016-01-07 22:00:25.194339654 +0100
***************
*** 743,744 ****
--- 743,746 ----
  {   /* Add new patch number below this line */
+ /**/
+     1060,
  /**/

-- 
Violators can be fined, arrested or jailed for making ugly faces at a dog.
		[real standing law in Oklahoma, United States of America]

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
