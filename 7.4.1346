To: vim_dev@googlegroups.com
Subject: Patch 7.4.1346
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.4.1346
Problem:    Compiler warnings in build with -O2.
Solution:   Add inintializations.
Files:      src/eval.c


*** ../vim-7.4.1345/src/eval.c	2016-02-17 10:05:39.095236924 +0100
--- src/eval.c	2016-02-18 20:15:28.576290981 +0100
***************
*** 8973,8979 ****
      static void
  f_acos(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 8973,8979 ----
      static void
  f_acos(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 9402,9408 ****
      static void
  f_asin(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 9402,9408 ----
      static void
  f_asin(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 9432,9438 ****
      static void
  f_atan2(typval_T *argvars, typval_T *rettv)
  {
!     float_T	fx, fy;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &fx) == OK
--- 9432,9438 ----
      static void
  f_atan2(typval_T *argvars, typval_T *rettv)
  {
!     float_T	fx = 0.0, fy = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &fx) == OK
***************
*** 9840,9846 ****
      static void
  f_ceil(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 9840,9846 ----
      static void
  f_ceil(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 10440,10446 ****
      static void
  f_cos(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 10440,10446 ----
      static void
  f_cos(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 10455,10461 ****
      static void
  f_cosh(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 10455,10461 ----
      static void
  f_cosh(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 11003,11009 ****
      static void
  f_exp(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 11003,11009 ----
      static void
  f_exp(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 11584,11590 ****
      static void
  f_float2nr(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      if (get_float_arg(argvars, &f) == OK)
      {
--- 11584,11590 ----
      static void
  f_float2nr(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      if (get_float_arg(argvars, &f) == OK)
      {
***************
*** 11603,11609 ****
      static void
  f_floor(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 11603,11609 ----
      static void
  f_floor(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 11618,11624 ****
      static void
  f_fmod(typval_T *argvars, typval_T *rettv)
  {
!     float_T	fx, fy;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &fx) == OK
--- 11618,11624 ----
      static void
  f_fmod(typval_T *argvars, typval_T *rettv)
  {
!     float_T	fx = 0.0, fy = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &fx) == OK
***************
*** 15022,15028 ****
      static void
  f_log(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 15043,15049 ----
      static void
  f_log(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 15037,15043 ****
      static void
  f_log10(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 15058,15064 ----
      static void
  f_log10(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 15833,15839 ****
      static void
  f_pow(typval_T *argvars, typval_T *rettv)
  {
!     float_T	fx, fy;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &fx) == OK
--- 15854,15860 ----
      static void
  f_pow(typval_T *argvars, typval_T *rettv)
  {
!     float_T	fx = 0.0, fy = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &fx) == OK
***************
*** 17116,17122 ****
      static void
  f_round(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 17137,17143 ----
      static void
  f_round(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 18288,18294 ****
      static void
  f_sin(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 18309,18315 ----
      static void
  f_sin(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 18303,18309 ****
      static void
  f_sinh(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 18324,18330 ----
      static void
  f_sinh(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 18889,18895 ****
      static void
  f_sqrt(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 18910,18916 ----
      static void
  f_sqrt(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 19951,19957 ****
      static void
  f_tan(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 19972,19978 ----
      static void
  f_tan(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 19966,19972 ****
      static void
  f_tanh(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 19987,19993 ----
      static void
  f_tanh(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
***************
*** 20155,20161 ****
      static void
  f_trunc(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
--- 20176,20182 ----
      static void
  f_trunc(typval_T *argvars, typval_T *rettv)
  {
!     float_T	f = 0.0;
  
      rettv->v_type = VAR_FLOAT;
      if (get_float_arg(argvars, &f) == OK)
*** ../vim-7.4.1345/src/version.c	2016-02-17 20:48:14.887567873 +0100
--- src/version.c	2016-02-17 21:46:11.273240190 +0100
***************
*** 749,750 ****
--- 749,752 ----
  {   /* Add new patch number below this line */
+ /**/
+     1346,
  /**/

-- 
Eight Megabytes And Continually Swapping.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
