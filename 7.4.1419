To: vim_dev@googlegroups.com
Subject: Patch 7.4.1419
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.4.1419
Problem:    Tests slowed down because of the "not a terminal" warning.
Solution:   Add the --not-a-term command line argument.
Files:      src/main.c, src/testdir/Makefile, src/Make_all.mak,
	    src/Make_amiga.mak, src/testdir/Make_dos.mak,
	    src/testdir/Make_ming.mak, src/testdir/Make_vms.mms,
	    runtime/doc/starting.txt


*** ../vim-7.4.1418/src/main.c	2016-02-23 14:52:31.881232212 +0100
--- src/main.c	2016-02-25 21:14:17.314580605 +0100
***************
*** 50,55 ****
--- 50,56 ----
  
      int		want_full_screen;
      int		stdout_isatty;		/* is stdout a terminal? */
+     int		not_a_term;		/* no warning for missing term? */
      char_u	*term;			/* specified terminal name */
  #ifdef FEAT_CRYPT
      int		ask_for_key;		/* -x argument */
***************
*** 1856,1861 ****
--- 1857,1863 ----
  				/* "--version" give version message */
  				/* "--literal" take files literally */
  				/* "--nofork" don't fork */
+ 				/* "--not-a-term" don't warn for not a term */
  				/* "--noplugin[s]" skip plugins */
  				/* "--cmd <cmd>" execute cmd before vimrc */
  		if (STRICMP(argv[0] + argv_idx, "help") == 0)
***************
*** 1883,1888 ****
--- 1885,1892 ----
  		}
  		else if (STRNICMP(argv[0] + argv_idx, "noplugin", 8) == 0)
  		    p_lpl = FALSE;
+ 		else if (STRNICMP(argv[0] + argv_idx, "not-a-term", 10) == 0)
+ 		    parmp->not_a_term = TRUE;
  		else if (STRNICMP(argv[0] + argv_idx, "cmd", 3) == 0)
  		{
  		    want_argument = TRUE;
***************
*** 2519,2525 ****
  	    /* don't want the delay when started from the desktop */
  	    && !gui.starting
  #endif
! 	    )
      {
  #ifdef NBDEBUG
  	/*
--- 2523,2529 ----
  	    /* don't want the delay when started from the desktop */
  	    && !gui.starting
  #endif
! 	    && !parmp->not_a_term)
      {
  #ifdef NBDEBUG
  	/*
***************
*** 3303,3308 ****
--- 3307,3313 ----
      main_msg(_("-F\t\t\tStart in Farsi mode"));
  #endif
      main_msg(_("-T <terminal>\tSet terminal type to <terminal>"));
+     main_msg(_("--not-a-term\t\tSkip warning for input/output not being a terminal"));
      main_msg(_("-u <vimrc>\t\tUse <vimrc> instead of any .vimrc"));
  #ifdef FEAT_GUI
      main_msg(_("-U <gvimrc>\t\tUse <gvimrc> instead of any .gvimrc"));
*** ../vim-7.4.1418/src/testdir/Makefile	2016-01-17 18:49:41.835115762 +0100
--- src/testdir/Makefile	2016-02-25 21:08:45.426072490 +0100
***************
*** 52,58 ****
  
  RM_ON_RUN = test.out X* viminfo
  RM_ON_START = tiny.vim small.vim mbyte.vim mzscheme.vim lua.vim test.ok benchmark.out
! RUN_VIM = VIMRUNTIME=$(SCRIPTSOURCE); export VIMRUNTIME; $(VALGRIND) $(VIMPROG) -f -u unix.vim -U NONE --noplugin -s dotest.in
  
  clean:
  	-rm -rf *.out *.failed *.res *.rej *.orig test.log messages $(RM_ON_RUN) $(RM_ON_START) valgrind.*
--- 52,58 ----
  
  RM_ON_RUN = test.out X* viminfo
  RM_ON_START = tiny.vim small.vim mbyte.vim mzscheme.vim lua.vim test.ok benchmark.out
! RUN_VIM = VIMRUNTIME=$(SCRIPTSOURCE); export VIMRUNTIME; $(VALGRIND) $(VIMPROG) -f -u unix.vim $(NO_PLUGIN) -s dotest.in
  
  clean:
  	-rm -rf *.out *.failed *.res *.rej *.orig test.log messages $(RM_ON_RUN) $(RM_ON_START) valgrind.*
***************
*** 118,124 ****
  # New style of tests uses Vim script with assert calls.  These are easier
  # to write and a lot easier to read and debug.
  # Limitation: Only works with the +eval feature.
! RUN_VIMTEST = VIMRUNTIME=$(SCRIPTSOURCE); export VIMRUNTIME; $(VALGRIND) $(VIMPROG) -f -u unix.vim -U NONE --noplugin
  
  newtests: newtestssilent
  	@/bin/sh -c "if test -f messages && grep -q 'FAILED' messages; then cat messages && cat test.log; fi"
--- 118,124 ----
  # New style of tests uses Vim script with assert calls.  These are easier
  # to write and a lot easier to read and debug.
  # Limitation: Only works with the +eval feature.
! RUN_VIMTEST = VIMRUNTIME=$(SCRIPTSOURCE); export VIMRUNTIME; $(VALGRIND) $(VIMPROG) -f -u unix.vim $(NO_PLUGIN)
  
  newtests: newtestssilent
  	@/bin/sh -c "if test -f messages && grep -q 'FAILED' messages; then cat messages && cat test.log; fi"
*** ../vim-7.4.1418/src/testdir/Make_dos.mak	2016-01-17 18:49:41.835115762 +0100
--- src/testdir/Make_dos.mak	2016-02-25 21:19:42.131164766 +0100
***************
*** 38,44 ****
  $(DOSTMP_INFILES): $(*B).in
  	if not exist $(DOSTMP)\NUL md $(DOSTMP)
  	if exist $@ del $@
! 	$(VIMPROG) -u dos.vim -U NONE --noplugin "+set ff=dos|f $@|wq" $(*B).in
  
  # For each input file dostmp/test99.in run the tests.
  # This moves test99.in to test99.in.bak temporarily.
--- 38,44 ----
  $(DOSTMP_INFILES): $(*B).in
  	if not exist $(DOSTMP)\NUL md $(DOSTMP)
  	if exist $@ del $@
! 	$(VIMPROG) -u dos.vim $(NO_PLUGIN) "+set ff=dos|f $@|wq" $(*B).in
  
  # For each input file dostmp/test99.in run the tests.
  # This moves test99.in to test99.in.bak temporarily.
***************
*** 47,53 ****
  	move $(*B).in $(*B).in.bak
  	copy $(DOSTMP)\$(*B).in $(*B).in
  	copy $(*B).ok test.ok
! 	$(VIMPROG) -u dos.vim -U NONE --noplugin -s dotest.in $(*B).in
  	-@if exist test.out MOVE /y test.out $(DOSTMP)\$(*B).out
  	-@if exist $(*B).in.bak move /y $(*B).in.bak $(*B).in
  	-@if exist test.ok del test.ok
--- 47,53 ----
  	move $(*B).in $(*B).in.bak
  	copy $(DOSTMP)\$(*B).in $(*B).in
  	copy $(*B).ok test.ok
! 	$(VIMPROG) -u dos.vim $(NO_PLUGIN) -s dotest.in $(*B).in
  	-@if exist test.out MOVE /y test.out $(DOSTMP)\$(*B).out
  	-@if exist $(*B).in.bak move /y $(*B).in.bak $(*B).in
  	-@if exist test.ok del test.ok
***************
*** 55,61 ****
  	-@if exist Xfind rd /s /q Xfind
  	-@del X*
  	-@if exist viminfo del viminfo
! 	$(VIMPROG) -u dos.vim -U NONE --noplugin "+set ff=unix|f test.out|wq" \
  		$(DOSTMP)\$(*B).out
  	@diff test.out $*.ok & if errorlevel 1 \
  		( move /y test.out $*.failed \
--- 55,61 ----
  	-@if exist Xfind rd /s /q Xfind
  	-@del X*
  	-@if exist viminfo del viminfo
! 	$(VIMPROG) -u dos.vim $(NO_PLUGIN) "+set ff=unix|f test.out|wq" \
  		$(DOSTMP)\$(*B).out
  	@diff test.out $*.ok & if errorlevel 1 \
  		( move /y test.out $*.failed \
***************
*** 104,110 ****
  
  bench_re_freeze.out: bench_re_freeze.vim
  	-if exist benchmark.out del benchmark.out
! 	$(VIMPROG) -u dos.vim -U NONE --noplugin $*.in
  	@IF EXIST benchmark.out ( type benchmark.out )
  
  # New style of tests uses Vim script with assert calls.  These are easier
--- 104,110 ----
  
  bench_re_freeze.out: bench_re_freeze.vim
  	-if exist benchmark.out del benchmark.out
! 	$(VIMPROG) -u dos.vim $(NO_PLUGIN) $*.in
  	@IF EXIST benchmark.out ( type benchmark.out )
  
  # New style of tests uses Vim script with assert calls.  These are easier
*** ../vim-7.4.1418/src/testdir/Make_ming.mak	2016-01-17 18:49:41.835115762 +0100
--- src/testdir/Make_ming.mak	2016-02-25 21:09:22.785679330 +0100
***************
*** 65,72 ****
  	echo ALL DONE
  
  fixff:
! 	-$(VIMPROG) -u dos.vim -U NONE --noplugin "+argdo set ff=dos|upd" +q *.in *.ok
! 	-$(VIMPROG) -u dos.vim -U NONE --noplugin "+argdo set ff=unix|upd" +q \
  		dotest.in test60.ok test71.ok test74.ok test_listchars.ok
  
  clean:
--- 65,72 ----
  	echo ALL DONE
  
  fixff:
! 	-$(VIMPROG) -u dos.vim $(NO_PLUGIN) "+argdo set ff=dos|upd" +q *.in *.ok
! 	-$(VIMPROG) -u dos.vim $(NO_PLUGIN) "+argdo set ff=unix|upd" +q \
  		dotest.in test60.ok test71.ok test74.ok test_listchars.ok
  
  clean:
***************
*** 84,90 ****
  
  .in.out:
  	$(CP) $*.ok test.ok
! 	$(VIMPROG) -u dos.vim -U NONE --noplugin -s dotest.in $*.in
  	diff test.out $*.ok
  	-$(DEL) $*.out
  	$(MV) test.out $*.out
--- 84,90 ----
  
  .in.out:
  	$(CP) $*.ok test.ok
! 	$(VIMPROG) -u dos.vim $(NO_PLUGIN) -s dotest.in $*.in
  	diff test.out $*.ok
  	-$(DEL) $*.out
  	$(MV) test.out $*.out
***************
*** 96,100 ****
  
  bench_re_freeze.out: bench_re_freeze.vim
  	-$(DEL) benchmark.out
! 	$(VIMPROG) -u dos.vim -U NONE --noplugin $*.in
  	$(CAT) benchmark.out
--- 96,100 ----
  
  bench_re_freeze.out: bench_re_freeze.vim
  	-$(DEL) benchmark.out
! 	$(VIMPROG) -u dos.vim $(NO_PLUGIN) $*.in
  	$(CAT) benchmark.out
*** ../vim-7.4.1418/src/testdir/Make_vms.mms	2016-01-17 18:49:41.835115762 +0100
--- src/testdir/Make_vms.mms	2016-02-25 21:09:42.821468490 +0100
***************
*** 4,10 ****
  # Authors:	Zoltan Arpadffy, <arpadffy@polarhome.com>
  #		Sandor Kopanyi,  <sandor.kopanyi@mailbox.hu>
  #
! # Last change:  2015 Dec 28
  #
  # This has been tested on VMS 6.2 to 8.3 on DEC Alpha, VAX and IA64.
  # Edit the lines in the Configuration section below to select.
--- 4,10 ----
  # Authors:	Zoltan Arpadffy, <arpadffy@polarhome.com>
  #		Sandor Kopanyi,  <sandor.kopanyi@mailbox.hu>
  #
! # Last change:  2016 Feb 25
  #
  # This has been tested on VMS 6.2 to 8.3 on DEC Alpha, VAX and IA64.
  # Edit the lines in the Configuration section below to select.
***************
*** 163,169 ****
  	-@ write sys$output "                "$*" "
  	-@ write sys$output "-----------------------------------------------"
  	-@ !run the test
! 	-@ create/term/wait/nodetach mcr $(VIMPROG) $(GUI_OPTION) -u vms.vim -U NONE --noplugin -s dotest.in $*.in
  	-@ !analyse the result
  	-@ directory /size/date test.out
  	-@ if "''F$SEARCH("test.out.*")'" .NES. "" then rename/nolog test.out $*.out 
--- 163,169 ----
  	-@ write sys$output "                "$*" "
  	-@ write sys$output "-----------------------------------------------"
  	-@ !run the test
! 	-@ create/term/wait/nodetach mcr $(VIMPROG) $(GUI_OPTION) -u vms.vim $(NO_PLUGIN) -s dotest.in $*.in
  	-@ !analyse the result
  	-@ directory /size/date test.out
  	-@ if "''F$SEARCH("test.out.*")'" .NES. "" then rename/nolog test.out $*.out 
*** ../vim-7.4.1418/runtime/doc/starting.txt	2013-08-10 13:25:01.000000000 +0200
--- runtime/doc/starting.txt	2016-02-25 21:12:22.071792905 +0100
***************
*** 410,415 ****
--- 414,423 ----
  		not needed, because Vim will be able to find out what type
  		of terminal you are using.  (See |terminal-info|.)  {not in Vi}
  
+ --not-a-term	Tells Vim that the user knows that the input and/or output is
+ 		not connected to a terminal.  This will avoid the warning and
+ 		the two second delay that would happen.
+ 
  							*-d*
  -d		Start in diff mode, like |vimdiff|.
  		{not in Vi} {not available when compiled without the |+diff|
*** ../vim-7.4.1418/src/version.c	2016-02-25 20:55:55.702165483 +0100
--- src/version.c	2016-02-25 21:04:55.596491651 +0100
***************
*** 750,751 ****
--- 750,753 ----
  {   /* Add new patch number below this line */
+ /**/
+     1419,
  /**/

-- 
ROBIN:  (warily) And if you get a question wrong?
ARTHUR: You are cast into the Gorge of Eternal Peril.
ROBIN:  Oh ... wacho!
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
