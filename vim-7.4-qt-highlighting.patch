--- vim74/runtime/syntax/cpp.vim.qthl~	2013-08-18 11:16:00.525811936 +0200
+++ vim74/runtime/syntax/cpp.vim	2013-08-18 11:17:34.158641365 +0200
@@ -42,6 +42,24 @@ if !exists("cpp_no_cpp11")
   syn keyword cppConstant	nullptr
 endif
 
+" Qt extensions
+if !exists("cpp_no_qt")
+  syn keyword qtKeywords	signals slots emit foreach
+  syn keyword qtMacros		Q_OBJECT Q_WIDGET Q_PROPERTY Q_ENUMS Q_OVERRIDE Q_CLASSINFO Q_SETS SIGNAL SLOT METHOD Q_DECLARE_INTERFACE Q_INTERFACES Q_EXPORT QDOC_PROPERTY Q_DECLARE_FLAGS Q_DECLARE_INTERFACE Q_DECLARE_METATYPE Q_DECLARE_TR_FUNCTIONS Q_DECLARE_TYPEINFO Q_DECLARE_PRIVATE Q_EMIT Q_FOREACH Q_FOREVER Q_IMPORT_PLUGIN Q_INTERFACES Q_EXPORT_PLUGIN Q_EXPORT_PLUGIN2 Q_ARG Q_SIGNALS Q_SLOTS Q_RETURN_ARG QT_BEGIN_HEADER QT_END_HEADER QT_BEGIN_NAMESPACE QT_END_NAMESPACE QT_MODULE Q_PRIVATE_SLOT Q_PRIVATE_PROPERTY Q_FLAGS Q_SCRIPTABLE Q_INVOKABLE Q_SIGNAL Q_SLOT READ WRITE DESIGNABLE SCRIPTABLE CONSTANT
+  syn match qtCast		"\<\(qt\|qobject\|qvariant\|qstyleoption\)_cast\s*<"me=e-1
+  syn match qtCast		"\<\(qt\|qobject\|qvariant\|qstyleoption\)_cast\s*$"
+  syn keyword qtTypedef		uchar uint ushort ulong Q_INT8 Q_UINT8 Q_INT16 Q_UINT16 Q_INT32 Q_UINT32 Q_LONG Q_ULONG Q_INT64 Q_UINT64 Q_LLONG Q_ULLONG pchar puchar pcchar qint8 quint8 qint16 quint16 qint32 quint32 qint64 quint64 qlonglong qulonglong
+  syn keyword qtBaseClass	QString QByteArray QHash QMap QVector QList QStringList QObject QWidget
+  syn keyword cRepeat		foreach
+  syn keyword cRepeat		forever
+
+  hi def link qtKeywords	Statement
+  hi def link qtMacros		Type
+  hi def link qtCast		Statement
+  hi def link qtTypedef		Type
+  hi def link qtBaseClass	Type
+endif
+
 " The minimum and maximum operators in GNU C++
 syn match cppMinMax "[<>]?"
 
--- vim74/src/misc1.c.qthl~	2013-08-18 11:16:00.528811899 +0200
+++ vim74/src/misc1.c	2013-08-18 11:23:16.072366855 +0200
@@ -5918,6 +5918,8 @@ cin_isterminated(s, incl_open, incl_comm
     char_u	found_start = 0;
     unsigned	n_open = 0;
     int		is_else = FALSE;
+    char_u	qt_special = 0;
+    char_u	qt_special_with_parentheses = 0;
 
     s = cin_skipcomment(s);
 
@@ -5934,7 +5936,7 @@ cin_isterminated(s, incl_open, incl_comm
 	if (*s == '}' && n_open > 0)
 	    --n_open;
 	if ((!is_else || n_open == 0)
-		&& (*s == ';' || *s == '}' || (incl_comma && *s == ','))
+		&& (*s == ';' || *s == '}' || qt_special || (*s == ')' && qt_special_with_parentheses)  || (incl_comma && *s == ','))
 		&& cin_nocode(s + 1))
 	    return *s;
 	else if (*s == '{')
@@ -5944,6 +5946,13 @@ cin_isterminated(s, incl_open, incl_comm
 	    else
 		++n_open;
 	}
+	else if(!strncmp(s, "Q_OBJECT", 8))
+	    qt_special=1;
+	else if(   !strncmp(s, "Q_INTERFACES", 12)
+		|| !strncmp(s, "Q_PROPERTY", 10)
+		|| !strncmp(s, "QDOC_PROPERTY", 13)
+		|| !strncmp(s, "Q_DECLARE_PRIVATE", 17))
+	    qt_special_with_parentheses=1;
 
 	if (*s)
 	    s++;
